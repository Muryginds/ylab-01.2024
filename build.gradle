plugins {
    id 'java'
    id 'war'
}

group = 'ru.ylab'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    password4jVersion = '1.7.3'
    mapstructVersion = '1.5.5.Final'
    mapstructProcessorVersion = '1.5.5.Final'
    lombokVersion = '1.18.30'
    lombokMapstructBindingVersion = '0.2.0'
    log4jApiVersion = '2.22.1'
    log4jCoreVersion = '2.22.1'
    log4jSlf4j2ImplVersion = '2.22.1'
    slf4NopVersion = '2.0.11'
    junitVersion = '5.9.1'
    mockitoCoreVersion = '5.10.0'
    postgresqlVersion = '42.7.1'
    liquibaseVersion = '4.25.1'
    testContainersPostgresVersion = '1.19.4'
    jakartaServletApiVersion = '6.1.0-M1'
    jacksonVersion = '2.16.1'
    hibernameValidatorVersion = '8.0.1.Final'
    springVersion = '6.1.4'
    snakeYamlVersion = '2.2'
    springdocVersion = '2.3.0'
    springSecurityVersion = '6.2.1'
    jwttVersion = '0.12.5'
}

dependencies {
    implementation "org.apache.logging.log4j:log4j-api:${log4jApiVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jCoreVersion}"
    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4jSlf4j2ImplVersion}"
    implementation "com.password4j:password4j:${password4jVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"
    implementation "org.hibernate.validator:hibernate-validator:${hibernameValidatorVersion}"
    implementation "org.springframework:spring-aspects:${springVersion}"
    implementation "org.springframework:spring-aop:${springVersion}"
    implementation "org.springframework:spring-context:${springVersion}"
    implementation "org.springframework:spring-web:${springVersion}"
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation "org.springframework.security:spring-security-web:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    implementation "org.yaml:snakeyaml:${snakeYamlVersion}"
    implementation "io.jsonwebtoken:jjwt-api:${jwttVersion}"
    implementation 'com.jayway.jsonpath:json-path:2.9.0'

    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwttVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jwttVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "jakarta.servlet:jakarta.servlet-api:${jakartaServletApiVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructProcessorVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    testImplementation platform("org.junit:junit-bom:${junitVersion}")
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.mockito:mockito-core:${mockitoCoreVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoCoreVersion}"
    testImplementation "org.springframework:spring-test:${springVersion}"
    testImplementation "org.testcontainers:postgresql:${testContainersPostgresVersion}"
    testImplementation "jakarta.servlet:jakarta.servlet-api:${jakartaServletApiVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructProcessorVersion}"
    testAnnotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
}

tasks.war {
    archiveFileName.set("monitoring-service.war")
}

test {
    useJUnitPlatform()
}
